package com.mit.filters;

import java.io.IOException;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.mit.http.session.SessionManager;
import com.mit.sessions.AtlasSession;

/**
 * Created by Lappv on 2/20/17.
 */
public class AtlasAuthenticationFilter<T> implements Filter {

    Logger logger = LoggerFactory.getLogger(AtlasAuthenticationFilter.class);

    private final SessionManager<T> sessionManager;
    List<String> excludes = new LinkedList<>();
    private String classNames = "";
    private String redirectPath = "";
    
    public AtlasAuthenticationFilter(SessionManager<T> sessionManager) {
        this.sessionManager = sessionManager;
    }

    @Override
    public void init(FilterConfig filterConfig) throws ServletException {
        String excludePatterns = filterConfig.getInitParameter("excludePatterns");
        classNames = filterConfig.getInitParameter("profileClasses");
        if (excludePatterns != null && !excludePatterns.isEmpty()) {
            excludes.addAll(Arrays.asList(excludePatterns.split(",")));
        }
        redirectPath = filterConfig.getInitParameter("redirectPath");
    }

    @Override
    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {
        HttpServletRequest httpRequest = (HttpServletRequest)servletRequest;
        String sessionKey = AtlasSession.getSessionKey(httpRequest);
        String uri = httpRequest.getRequestURI();
        boolean isAuthenticated = false;


        for (String exclude : excludes) {
            if (uri.startsWith(exclude)) {
                isAuthenticated = true;
                break;
            }
        }
        if (!StringUtils.isEmpty(sessionKey)) {
        	for (String className : classNames.split(",")) {
                String cacheKey = className + "." + sessionKey;
                T session = sessionManager.get(cacheKey);

                if (session != null) {
                    AtlasSession.setAttribute(httpRequest, sessionKey, session);
                    filterChain.doFilter(httpRequest, servletResponse);
                    return;
                }
        	}
        }

        if (isAuthenticated) {
            filterChain.doFilter(servletRequest, servletResponse);
        } else {
        	HttpServletResponse response = ((HttpServletResponse)servletResponse);
            response.sendRedirect(redirectPath);
        }
    }

    @Override
    public void destroy() {

    }
}
